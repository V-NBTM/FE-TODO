{"ast":null,"code":"import { API_BASE_URL } from \"../app-config\";\nexport function call(api, method, request) {\n  var options = {\n    headers: new Headers({\n      \"Content-Type\": \"application/json\"\n    }),\n    url: API_BASE_URL + api,\n    method: method\n  };\n  if (request) {\n    // GET method\n    options.body = JSON.stringify(request);\n  }\n  return fetch(options.url, options).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        // response.ok가 true이면 정상적인 리스폰스를 받은것, 아니면 에러 리스폰스를 받은것.\n        return Promise.reject(json);\n      }\n      return json;\n    });\n  });\n}","map":{"version":3,"names":["API_BASE_URL","call","api","method","request","options","headers","Headers","url","body","JSON","stringify","fetch","then","response","json","ok","Promise","reject"],"sources":["/Users/hong-ayul/Projects/TODO/todo-react-app/src/service/ApiService.js"],"sourcesContent":["import { API_BASE_URL } from \"../app-config\";\n\nexport function call(api, method, request) {\n  let options = {\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n    }),\n    url: API_BASE_URL + api,\n    method: method,\n  };\n  if (request) {\n    // GET method\n    options.body = JSON.stringify(request);\n  }\n  return fetch(options.url, options).then((response) =>\n    response.json().then((json) => {\n      if (!response.ok) {\n        // response.ok가 true이면 정상적인 리스폰스를 받은것, 아니면 에러 리스폰스를 받은것.\n        return Promise.reject(json);\n      }\n      return json;\n    })\n  );\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;AAE5C,OAAO,SAASC,IAAI,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACzC,IAAIC,OAAO,GAAG;IACZC,OAAO,EAAE,IAAIC,OAAO,CAAC;MACnB,cAAc,EAAE;IAClB,CAAC,CAAC;IACFC,GAAG,EAAER,YAAY,GAAGE,GAAG;IACvBC,MAAM,EAAEA;EACV,CAAC;EACD,IAAIC,OAAO,EAAE;IACX;IACAC,OAAO,CAACI,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,OAAO,CAAC;EACxC;EACA,OAAOQ,KAAK,CAACP,OAAO,CAACG,GAAG,EAAEH,OAAO,CAAC,CAACQ,IAAI,CAAC,UAACC,QAAQ;IAAA,OAC/CA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAAC,UAACE,IAAI,EAAK;MAC7B,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB;QACA,OAAOC,OAAO,CAACC,MAAM,CAACH,IAAI,CAAC;MAC7B;MACA,OAAOA,IAAI;IACb,CAAC,CAAC;EAAA,EACH;AACH"},"metadata":{},"sourceType":"module"}